{"version":3,"sources":["validateForm.js","useForm.js","FormSignup.js","FormSuccess.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["validate","values","errors","username","trim","email","test","password","length","password2","useForm","callback","useState","setValues","setErrors","issubmitting","setIsSubmitting","useEffect","Object","keys","handleChange","e","target","name","value","handleSubmit","preventDefault","FormSignup","submitForm","className","onSubmit","noValidate","htmlFor","type","id","onChange","placeholder","href","FormSuccess","src","alt","Form","isSubmitted","setIsSubmitted","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b647fbe8.chunk.js","sourcesContent":["export default function validate(values){\r\n    let errors={};\r\n\r\n  //validation for username\r\n  if(!values.username.trim()){\r\n      errors.username=\"Username Required\";\r\n  }\r\n  //for email\r\n  if(!values.email){\r\n      errors.email='Email required'\r\n  }else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)){\r\n      errors.email=\"Email address is invalid\"\r\n  }\r\n  if(!values.password){\r\n      errors.password='Password required'\r\n  }else if(values.password.length<6){\r\n           errors.password='password need to ne 6 characters or more'\r\n  }\r\n  if(!values.password2){\r\n      errors.password2='password is required';\r\n  }else if(values.password2!==values.password){\r\n      errors.password2='password do not match'\r\n  }\r\n  return errors\r\n}\r\n\r\n","import { useCallback, useEffect,useState } from \"react\";\r\nimport validate from \"./validateForm\";\r\n\r\n//custom hook \r\n\r\nconst useForm=(callback,validate)=>{\r\n    const[values,setValues]=useState({\r\n        username:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        password2:\"\"\r\n    });\r\n    const[errors,setErrors]=useState({})\r\n    const[issubmitting,setIsSubmitting]=useState(false);\r\n\r\n    const handleChange=(e)=>{\r\n        const{name,value}=e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    };\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        setErrors(validate(values));\r\n        setIsSubmitting(true);\r\n\r\n    };\r\n    useEffect(()=>{\r\n        if(Object.keys(errors).length===0&& issubmitting){\r\n            callback();\r\n        }\r\n    },[errors]);\r\n    return {handleChange,values,handleSubmit,errors};\r\n};\r\nexport default useForm;","import React from 'react'\r\nimport useForm  from './useForm'\r\nimport validate from './validateForm';\r\nimport './Form.css';\r\n\r\nconst FormSignup=({submitForm})=>{\r\n    const{handleChange,values,handleSubmit,errors}=useForm(submitForm,validate);\r\n\r\n    return(\r\n        <div className='form-content-right'>\r\n            <form className='form' onSubmit={handleSubmit} noValidate>\r\n                <h1>Get Started With Us! Fill Details Here...</h1>\r\n                <div className='form-inputs'>\r\n                 <label htmlFor='username' className='form-label'>Username: </label>\r\n                     <input type='text' className='form-input' id='username'\r\n                      value={values.username} onChange={handleChange}\r\n                      placeholder='Enter your username' name='username'></input>\r\n                      {errors.username&&<p>{errors.username}</p>}\r\n                \r\n                </div>\r\n                <div className='form-inputs'>\r\n                 <label htmlFor='email' className='form-label'> Email:</label>\r\n                     <input type='email' id='email' className='form-input'\r\n                       value={values.email} onChange={handleChange}\r\n                      placeholder='Enter your email' name='email'></input>\r\n                      {errors.email&&<p>{errors.email}</p>}\r\n                 \r\n                </div>\r\n                <div className='form-inputs'>\r\n                 <label htmlFor='password' className='form-label'>  Password: </label>\r\n                     <input type='password' className='form-input' id='password'\r\n                       value={values.password} onChange={handleChange}\r\n                      placeholder='Enter your password' name='password'></input>\r\n                       {errors.password&&<p>{errors.password}</p>}\r\n                \r\n                </div>\r\n                <div className='form-inputs'>\r\n                 <label htmlFor='password2' className='form-label'>Confirm Password </label>\r\n                     <input type='password' className='form-input' id='password2'\r\n                       value={values.password2} onChange={handleChange}\r\n                      placeholder='Enter your password again' name='password2'></input>\r\n                       {errors.password2 &&<p>{errors.password2}</p>}\r\n                \r\n                \r\n                </div>\r\n                <button className='form-input-btn' type='submit'>Sign Up</button>\r\n                <span className='form-input-login'>Already have an account? Login <a href='#'>here</a></span>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default FormSignup","import React from \"react\";\r\nimport './Form.css';\r\n\r\nconst FormSuccess=()=>{\r\n    return(\r\n        <div className='form-content-right'>\r\n            <div className='form-success'>\r\n                <h2>We have recieved your request</h2>\r\n            </div>\r\n            <img src='images/img-1.png' alt='success image' className='form-img-2'/>\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default FormSuccess;","import React, { useState } from 'react';\r\nimport FormSignup from './FormSignup';\r\nimport FormSuccess from './FormSuccess';\r\nimport './Form.css';\r\n\r\nconst Form =()=>{\r\n  const[isSubmitted,setIsSubmitted]=useState(false);\r\n\r\n  function submitForm(){\r\n    setIsSubmitted(true);\r\n  }\r\n    return(\r\n      <>\r\n        <div className='form-container'>\r\n          <span className='close-btn'>X</span>\r\n         \r\n          \r\n           {!isSubmitted?(<FormSignup submitForm={submitForm}/>): (<FormSuccess/>)} \r\n         \r\n          </div>\r\n       \r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default Form;\r\n","\nimport './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <h2>  Fill This Form To Make Request To Us.</h2> */}\n      <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}